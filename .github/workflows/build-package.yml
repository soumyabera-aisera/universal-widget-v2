#.github/workflows/build-package.yml
name: Build and Package Universal Widget

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Target platform (e.g., Zendesk, Salesforce, ServiceNow)'
        required: true
        default: 'Zendesk'
    
      config:
        description: 'Configuration settings (e.g., ["setting1", "setting2"])'
        required: false
        type: string
        default: ''
      
      # ServiceNow specific inputs
      loginHost:
        description: 'ServiceNow instance URL (e.g., https://dev12345.service-now.com)'
        required: false
      username:
        description: 'ServiceNow username'
        required: false
      password:
        description: 'ServiceNow password'
        required: false

jobs:
  build-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout universal-widget-v2 repository
        uses: actions/checkout@v4
        with:
          path: universal-widget-v2

      - name: Checkout widget-templates repository
        uses: actions/checkout@v4
        with:
          repository: soumyabera-aisera/widget-templates
          path: widget-templates

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies for universal-widget-v2
        run: npm install
        working-directory: universal-widget-v2

      # =================================================================
      #                        Zendesk Pipeline
      # =================================================================
      - name: Build Universal Widget for Zendesk
        if: github.event.inputs.platform == 'Zendesk'
        run: npm run build:zendesk
        working-directory: universal-widget-v2

      - name: Get Hashed Filenames for Zendesk
        if: github.event.inputs.platform == 'Zendesk'
        id: get_zendesk_filenames
        run: |
          echo "Looking for files in universal-widget-v2/dist-zendesk/assets/build"
          ls -l universal-widget-v2/dist-zendesk/assets/build

          JS_FILE_PATH=$(find universal-widget-v2/dist-zendesk/assets/build -name "ticketSidebar.*.bundle.js" -print -quit)
          JS_FILE=$(basename "$JS_FILE_PATH")
          echo "Found JS file: $JS_FILE"
          echo "JS_FILE=$JS_FILE" >> $GITHUB_OUTPUT

          CSS_FILE_PATH=$(find universal-widget-v2/dist-zendesk/assets/build -name "ticketSidebar.*.css" -print -quit)
          CSS_FILE=$(basename "$CSS_FILE_PATH")
          echo "Found CSS file: $CSS_FILE"
          echo "CSS_FILE=$CSS_FILE" >> $GITHUB_OUTPUT
        working-directory: .

      - name: Assemble Zendesk App Package and Replace Placeholders
        if: github.event.inputs.platform == 'Zendesk'
        run: |
          echo "Assembling Zendesk package..."
          mkdir -p zendesk-app-package/assets/build
          cp widget-templates/zendesk-template/index.html zendesk-app-package/assets/build/index.html
          
          sed -i "s|TICKET_SIDEBAR_JS_PLACEHOLDER|${{ steps.get_zendesk_filenames.outputs.JS_FILE }}|g" zendesk-app-package/assets/build/index.html
          sed -i "s|TICKET_SIDEBAR_CSS_PLACEHOLDER|${{ steps.get_zendesk_filenames.outputs.CSS_FILE }}|g" zendesk-app-package/assets/build/index.html

          cp universal-widget-v2/dist-zendesk/assets/build/* zendesk-app-package/assets/build/ || true
          
          cp widget-templates/zendesk-template/manifest.json zendesk-app-package/
          cp widget-templates/zendesk-template/zcli.apps.config.json zendesk-app-package/
          mkdir -p zendesk-app-package/translations
          cp widget-templates/zendesk-template/translations/en.json zendesk-app-package/translations/
          cp widget-templates/zendesk-template/assets/* zendesk-app-package/assets/ || true

          echo "Zendesk package content:"
          ls -R zendesk-app-package/
        working-directory: .

      - name: Install ZCLI
        if: github.event.inputs.platform == 'Zendesk'
        run: npm install @zendesk/zcli -g

      - name: Deploy to Zendesk
        if: github.event.inputs.platform == 'Zendesk'
        env:
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          ZENDESK_EMAIL: ${{ secrets.ZENDESK_EMAIL }}
          ZENDESK_API_TOKEN: ${{ secrets.ZENDESK_API_TOKEN }}
        run: |
          echo "Deploying Zendesk app using zcli..."
          zcli apps:update ./zendesk-app-package
        working-directory: .

      - name: Upload Zendesk App Artifact
        if: github.event.inputs.platform == 'Zendesk'
        uses: actions/upload-artifact@v4
        with:
          name: zendesk-app-package
          path: zendesk-app-package/tmp/*.zip
          retention-days: 5

      - name: Handle Salesforce (Not Implemented Yet)
        if: github.event.inputs.platform == 'Salesforce'
        run: echo "Salesforce packaging is not yet implemented. Please refer to the documentation for manual steps."

      # =================================================================
      #                       ServiceNow Pipeline
      # =================================================================
      - name: Build Universal Widget for ServiceNow
        if: github.event.inputs.platform == 'ServiceNow'
        run: npm run build:servicenow
        working-directory: universal-widget-v2

      - name: Install ServiceNow CLI (snc)
        if: github.event.inputs.platform == 'ServiceNow'
        run: npm install -g @servicenow/cli

      - name: Deploy to ServiceNow
        if: github.event.inputs.platform == 'ServiceNow'
        env:
          SNC_USERNAME: ${{ inputs.username }}
          SNC_PASSWORD: ${{ inputs.password }}
        run: |
          echo "Deploying to ServiceNow instance: ${{ inputs.loginHost }}"
          # Find the path of the globally installed `snc` executable and run it
          SNC_PATH=$(npm root -g)/@servicenow/cli/bin/snc
          mkdir -p servicenow-app/snc-web-component/
          
          cp universal-widget-v2/dist-servicenow/servicenow-component.js servicenow-app/snc-web-component/

          $SNC_PATH ui-component deploy \
            --loginHost ${{ inputs.loginHost }} \
            --username $SNC_USERNAME \
            --password $SNC_PASSWORD \
            --componentDir 'servicenow-app'
