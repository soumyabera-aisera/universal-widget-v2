#.github/workflows/build-package.yml
name: Build and Package Universal Widget

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Target platform (e.g., Zendesk, Salesforce, ServiceNow)'
        required: true
        default: 'Zendesk'
    
      config: # New input for configuration array
        description: 'Configuration settings (e.g., ["setting1", "setting2"])'
        required: false
        type: string # Representing an array as a JSON string
        default: '' # Default to an empty JSON array string

jobs:
  build-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout universal-widget-v2 repository
        uses: actions/checkout@v4
        with:
          path: universal-widget-v2

      - name: Checkout widget-templates repository
        uses: actions/checkout@v4
        with:
          repository: soumyabera-aisera/widget-templates
          path: widget-templates

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies for universal-widget-v2
        run: npm install
        working-directory: universal-widget-v2

      - name: Build Universal Widget for Zendesk
        if: github.event.inputs.platform == 'Zendesk'
        run: npm run build:zendesk
        working-directory: universal-widget-v2 # Run build command from within the widget repo

      - name: Assemble Zendesk App Package
        if: github.event.inputs.platform == 'Zendesk'
        run: |
          echo "Assembling Zendesk package..."
          # Create the Zendesk app package directory and its assets subdirectory
          mkdir -p zendesk-app-package/assets # NEW: Create assets subdirectory
          # Copy the built HTML file from universal-widget-v2/dist-zendesk to zendesk-app-package/assets/
          cp universal-widget-v2/dist-zendesk/index.html zendesk-app-package/assets/ # NEW: Copy to assets/
          # Copy Zendesk specific scaffolding files from widget-templates
          cp widget-templates/zendesk-template/manifest.json zendesk-app-package/
          mkdir -p zendesk-app-package/translations
          cp widget-templates/zendesk-template/translations/en.json zendesk-app-package/translations/
          # Copy assets (logos, etc.) from widget-templates/zendesk-template/assets to zendesk-app-package/assets
          # This line is already correctly copying to zendesk-app-package/assets
          cp widget-templates/zendesk-template/assets/* zendesk-app-package/assets/ || true
          # Copy zcli.apps.config.json to the app package root
          cp widget-templates/zendesk-template/zcli.apps.config.json zendesk-app-package/
          echo "Zendesk package content:"
          ls -R zendesk-app-package/
        working-directory: . # Run from the root of the runner to manage files from both checked-out repos

      - name: Install ZCLI
        if: github.event.inputs.platform == 'Zendesk'
        run: npm install @zendesk/zcli -g # Install ZCLI globally

      - name: Validate, Package, and Deploy to Zendesk
        if: github.event.inputs.platform == 'Zendesk'
        env:
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          ZENDESK_EMAIL: ${{ secrets.ZENDESK_EMAIL }}
          ZENDESK_API_TOKEN: ${{ secrets.ZENDESK_API_TOKEN }}
        run: |
          echo "Deploying Zendesk app using zcli..."
          zcli apps:package ./zendesk-app-package
          # zcli apps:update takes the app directory and handles packaging internally
          zcli apps:update ./zendesk-app-package
        working-directory: . # Run from the root of the runner

      - name: Upload Zendesk App Artifact
        if: github.event.inputs.platform == 'Zendesk'
        uses: actions/upload-artifact@v4
        with:
          name: zendesk-app-package
          # zcli apps:update creates the package in a 'tmp' directory at the execution root before uploading
          path: ./tmp/*.zip
          retention-days: 5

      - name: Handle Salesforce (Not Implemented Yet)
        if: github.event.inputs.platform == 'Salesforce'
        run: echo "Salesforce packaging is not yet implemented. Please refer to the documentation for manual steps."

      - name: Handle ServiceNow (Not Implemented Yet)
        if: github.event.inputs.platform == 'ServiceNow'
        run: echo "ServiceNow packaging is not yet implemented. Please refer to the documentation for manual steps."